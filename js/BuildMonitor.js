export default class BuildMonitor{constructor(t){if(this.nextBuild=t&&moment(t).add({days:1}),this.element=BuildMonitor.createElement(),this.blink=0,!this.nextBuild)return this.showBuilding();const e=moment();this.nextBuild<=e&&this.nextBuild.add({days:moment.duration(e-this.nextBuild).days()+1}),this.monitor()}static createElement(){let t=document.createElement("div");return t.classList.add("countdown"),t.innerHTML="Initializing...",document.querySelector(".body").appendChild(t),t}monitor(){this.timer=setInterval((()=>this.showNextUpdate()),500),this.showNextUpdate()}showNextUpdate(){let t=this.calculateDuration();if(t<=0)return clearInterval(this.timer),this.showReady();let e=t.format("[<span>]HH:mm.ss[</span>]");this.element.innerHTML="Next update in "+((this.blink^=1)?e:e.replace(/:/," "))}showBuilding(){this.element.classList.add("building"),this.element.innerHTML="Building update"+"<span>.</span>".repeat(3)}showReady(){this.element.classList.add("ready"),this.element.innerHTML='<a onclick="location.reload()">Ready for launch</a>'}calculateDuration(){return moment.utc(moment.duration(this.nextBuild-moment()).asMilliseconds())}}